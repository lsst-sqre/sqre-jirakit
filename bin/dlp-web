#!/usr/bin/env python

import flask
import graphviz

import os
from contextlib import contextmanager
from io import BytesIO
from shutil import rmtree
from tempfile import mkdtemp

from lsst.sqre.jira2dot import jira2dot, attr_func, rank_func
from lsst.sqre.jirakit import cycles, SERVER

app = flask.Flask(__name__)

QUERY='project = DLP AND (issuetype = Milestone OR issuetype = "Meta-epic") AND wbs ~ "%s"'
DEFAULT_FMT="pdf"

# Supported formats. A request for anything else throws a 404.
FMTS = {"dot", "eps", "fig", "gif", "pdf", "svg", "png", "ps", "svg"}

@contextmanager
def tempdir():
    dirname = mkdtemp()
    try:
        yield dirname
    finally:
        rmtree(dirname, ignore_errors=True)

@app.route('/wbs/<wbs>')
def get_graph(wbs):
    return flask.redirect(flask.url_for("get_formatted_graph", wbs=wbs, fmt=DEFAULT_FMT))

@app.route('/wbs/<fmt>/<wbs>')
def get_formatted_graph(fmt, wbs):
    if fmt not in FMTS:
        flask.abort(404)
    dot = BytesIO()
    jira2dot(SERVER, QUERY % wbs, file=dot, attr_func=attr_func, rank_func=rank_func, ranks=cycles())
    dot.seek(0)
    graph = graphviz.Source(dot.read(), format=fmt)
    with tempdir() as dirname:
        image = graph.render("graph", cleanup=True, directory=dirname)
        return flask.send_file(os.path.join(dirname, "graph%s%s" % (os.path.extsep, fmt)))

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=8080)
