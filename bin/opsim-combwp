#!/usr/bin/env python

from __future__ import print_function

# standard dependencies
import argparse
import textwrap

# in-house modules
import lsst.sqre.jirakit
from lsst.sqre.confluence import bold, heading, table
from lsst.sqre.jira2confluence import create_list_from_numbered_description

# argument parsing and default options

parser = argparse.ArgumentParser(
    prog='opsim-combwp',
    formatter_class=argparse.RawDescriptionHelpFormatter,
    description=textwrap.dedent('''

    Generate a side-by-side listing of the SOCS / Scheduler combined workplan in Confluence format.

    The output can be piped into a file that can then be cut-and-pasted into a Confluence page via the
    Markdown menu option.

    '''),
    epilog='Part of jirakit: https://github.com/lsst-sqre/sqre-jirakit'
)

parser.add_argument('-s', '--server',
                    default=lsst.sqre.jirakit.SERVER,
                    help='JIRA server URL')
parser.add_argument('-a', '--auth-file',
                    default=None,
                    help='Path to a file containing basic authentication information')
parser.add_argument('-v', '--version', action='version', version='%(prog)s 0.1')

if __name__ == "__main__":

    opt = parser.parse_args()

    from jira import JIRA
    jira_server = JIRA(server=opt.server, basic_auth=lsst.sqre.jirakit.basic_auth_from_file(opt.auth_file))

    query = "project = Simulations AND issuetype = Epic AND summary ~ \"SOCS Release\" ORDER BY key"
    issues = jira_server.search_issues(query)

    page_content = []
    import time
    page_content.append("This page provides the coordinated work plan between the Simulated OCS (SOCS) "
                        "and the Scheduler.")
    page_content.append("Updated: {0}".format(time.strftime("%Y-%m-%d %H:%M", time.localtime())))
    page_content.append("")

    import os
    for issue in issues:
        socs_summary = issue.fields.summary
        version = socs_summary.split()[-1]
        page_content.append(heading("Combined Release {0}".format(version), 2))

        socs_descr = issue.fields.description
        comb_duedate = issue.fields.duedate
        page_content.append("{0} {1}".format(bold("Release Date:"), comb_duedate))
        page_content.append("")

        socs_work = create_list_from_numbered_description(socs_descr)

        # Should only be one!
        sched_epic = jira_server.issue(lsst.sqre.jirakit.get_issue_links(issue,
                                                                         "Relates")[0].outwardIssue.key)
        sched_summary = sched_epic.fields.summary
        sched_descr = sched_epic.fields.description

        sched_work = create_list_from_numbered_description(sched_descr)

        # Create Table
        headings = ["{0} Workplan".format(socs_summary.split()[0]),
                    "{0} Workplan".format(sched_summary.split()[0])]

        page_content.append(table(headings, socs_work, sched_work, onerow=True))

        page_content.append("")
        page_content.append("")

    print(os.linesep.join(page_content))
